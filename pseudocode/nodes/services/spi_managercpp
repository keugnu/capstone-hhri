Node:	spi_manager
Input:
	char request[25]
	char data[16]
Config:
	SPI_DEV = "/dev/spidev3.0"
	request	:	request[0] 		type
				request[1-8]	register 1
				request[9-24]	register 2
	data	:	data[0-7]		upper bits
				data[8-15]		lower bits
Output:
	bool success
	char data[]
Steps:
	1. Initialization: Check if bus is able to be opened else exit(1)
	2. if new request exists, then
		(a) place request on queue
	3. if queue is not empty
		(a) sort queue based on priority
		(b) serve top request
			(i) if type of request is R (read), then
					(A) read registers in request[] and set data[]
					(B) return data
				elsif write request succeeds, then
					(A) return true
				else
					(A) increase priority by 1
					(B) place request back onto queue
					(C) return false

